(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{489:function(s,t,a){"use strict";a.r(t);var r=a(7),e=Object(r.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-索引是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-索引是什么"}},[s._v("#")]),s._v(" 1 索引是什么")]),s._v(" "),t("p",[s._v("数据库索引，是数据库管理系统（DBMS）中一个排序的数据结构，以协助快速查询，更新数据库表中的数据")]),s._v(" "),t("h2",{attrs:{id:"_2-索引类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-索引类型"}},[s._v("#")]),s._v(" 2 索引类型")]),s._v(" "),t("ul",[t("li",[s._v("普通索引 Normal")]),s._v(" "),t("li",[s._v("唯一索引 Unique")]),s._v(" "),t("li",[s._v("全文索引 FullText  解决大文本中like")])]),s._v(" "),t("h2",{attrs:{id:"_3-索引的数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-索引的数据结构"}},[s._v("#")]),s._v(" 3 索引的数据结构")]),s._v(" "),t("p",[t("strong",[s._v("二叉查找树")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/%E4%BA%8C%E5%8F%89%E6%A0%91.png",alt:""}})]),s._v(" "),t("p",[s._v("顺序依次增大的时候退化为链表，时间复杂度O(n)")]),s._v(" "),t("p",[t("strong",[s._v("平衡二叉树")])]),s._v(" "),t("p",[s._v("左右子树的深度差绝对值不能超过1")]),s._v(" "),t("ol",[t("li",[s._v("单个节点存储的信息占据的空间很小，但是分配的空间是16KB，造成资源利用率很低，浪费")]),s._v(" "),t("li",[s._v("树形结构深度很深，会带来很多IO操作，效率急剧下降")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/2.png",alt:""}})]),s._v(" "),t("p",[s._v("磁盘->内存\nInnoDB ，操作的最小单位，Page页 ，一次读取16K ，读取多次，磁盘IO次数过多")]),s._v(" "),t("p",[t("strong",[s._v("多路平衡查找树（B树）")])]),s._v(" "),t("p",[s._v("最终在B树中找到索引对应的内存地址，然后去查找对应的数据\n"),t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/b%E6%A0%91.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("加强版多路平衡查找树（B+Tree）")])]),s._v(" "),t("p",[s._v("加强版的多路平衡二叉树：叶子节点存储的具体的记录，物理数据和索引都是存储在B+树中\n"),t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/%E5%8A%A0%E6%A0%91.png",alt:""}})]),s._v(" "),t("ol",[t("li",[s._v("关键字数=dgree")]),s._v(" "),t("li",[s._v("内节点不存储数据")]),s._v(" "),t("li",[s._v("叶子节点有双向指针")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/b-tree.png",alt:""}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/6.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("B+树和HASH的比较")])]),s._v(" "),t("p",[s._v("B+树是一个平衡的多叉树，从根节点到每个叶子节点的高度差值不超过1，而且同层级的节点间有指针相互链接。在B+树上的常规检索，从根节点到叶子节点的搜索效率基本相当，\n不会出现大幅波动，而且基于索引的顺序扫描时，也可以利用双向指针快速左右移动，效率非常高。因此，B+树索引被广泛应用于数据库、文件系统等场景。\n简单地说，哈希索引就是采用一定的哈希算法，把键值换算成新的哈希值，检索时不需要类似B+树那样从根节点到叶子节点逐级查找，只需一次哈希算法即可立刻定位到相应的位置，\n速度非常快。")]),s._v(" "),t("ul",[t("li",[s._v("Hash只适合等值查询，不能范围查找")]),s._v(" "),t("li",[s._v("B+树可以叶子节点有序，链式结构，双向指针可范围查找")]),s._v(" "),t("li",[s._v("Hash效率高，B+数从根节点查找，多次IO")]),s._v(" "),t("li",[s._v("Hash存在Hash碰撞问题")])]),s._v(" "),t("h2",{attrs:{id:"_4-聚集索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-聚集索引"}},[s._v("#")]),s._v(" 4 聚集索引")]),s._v(" "),t("ol",[t("li",[s._v("主键索引")]),s._v(" "),t("li",[s._v("unique key not null")]),s._v(" "),t("li",[s._v("没有索引的情况下，rowid作为聚集索引")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/7.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"_5-索引优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-索引优化"}},[s._v("#")]),s._v(" 5 索引优化")]),s._v(" "),t("p",[s._v("（1）联合索引最左匹配\n必须从第一个字段开始，而且不能中断")]),s._v(" "),t("p",[s._v("（2）覆盖索引\nselect的字段包含在了用到的索引中，不需要回表")]),s._v(" "),t("p",[s._v("标志：explain        extra  ：Using index")]),s._v(" "),t("p",[s._v("例子：索引（name，phone）")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" phone "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ‘"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18388461254")]),s._v("’   不走索引\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" name  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" phone "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ‘"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18388461254")]),s._v("’   会走索引，并且是覆盖索引（优化器处理）\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" phone "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" phone "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ‘"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18388461254")]),s._v("’   会走索引，并且是覆盖索引（优化器处理）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("回表")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/8.png",alt:""}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://fire-repository.oss-cn-beijing.aliyuncs.com/arthas/9.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"_6-不同引擎存储的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-不同引擎存储的文件"}},[s._v("#")]),s._v(" 6 不同引擎存储的文件")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("MyISAM\nMYD和MYI两个文件，MYID表中具体的数据data，MYI表中数据对应的索引文件")])]),s._v(" "),t("li",[t("p",[s._v("InnoDB\nibd：其实就是索引文件（数据在索引文件的叶子节点中）")])])]),s._v(" "),t("h2",{attrs:{id:"_7-如何建索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何建索引"}},[s._v("#")]),s._v(" 7 如何建索引")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("离散度原则\ncount(distinct(column_name)):count(*)")])]),s._v(" "),t("li",[t("p",[s._v("最左匹配原则")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);